#include "gui.h"

using namespace GUI;

bool Widgeter::box(const Transform tf) const {
  throw std::runtime_error("method not implemented!");
  return false;
}

bool Widgeter::textBox(const Transform tf) const {
  throw std::runtime_error("method not implemented!");
  return false;
}

bool Widgeter::editableTextBox(const Transform tf) const {
  throw std::runtime_error("method not implemented!");
  return false;
}

bool Widgeter::button(const Transform tf) const {
  throw std::runtime_error("method not implemented!");
  return false;
}

void Widgeter::drawRect(SDL_Renderer* renderer, const Transform tf) const {
  SDL_Rect rect{tf.x, tf.y, tf.width, tf.height};
  SDL_RenderDrawRect(renderer, &rect); 
}

void Widgeter::drawText(SDL_Renderer* renderer, const Transform tf, const int font_size, const std::string text) const {
  TTF_Font* font = TTF_OpenFont("assets/fonts/raleway/Raleway-Regular.ttf", font_size);
  
  if(!font) {
    throw std::runtime_error("failed to initialize font");
  } else {
    std::cout << "succesfully created font" << std::endl;
  }

  SDL_Rect rect{tf.x, tf.y, tf.width, tf.height}; 
  SDL_Color text_color = {255, 255, 255, 255};
  SDL_Surface* text_surface = TTF_RenderText_Solid(font, "test", text_color);

  if(!text_surface) {
    throw std::runtime_error("failed to create surface from texture");
  } else {
    std::cout << "successfully created surface" << std::endl;
  }

  SDL_Texture* text_texture = SDL_CreateTextureFromSurface(renderer, text_surface);

  if(!text_texture) {
    throw std::runtime_error("failed to create texture");
  } else {
    std::cout << "successfully created texture" << std::endl;
  }

  SDL_RenderCopy(renderer, text_texture, NULL, &rect); 

  SDL_FreeSurface(text_surface);
  SDL_DestroyTexture(text_texture);
}

